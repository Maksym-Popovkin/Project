# This workflow will build and push an application to a Azure Kubernetes Service (AKS) cluster when you push your code
#
# This workflow assumes you have already created the target AKS cluster and have created an Azure Container Registry (ACR)
# For instructions see:
#   - https://docs.microsoft.com/en-us/azure/aks/kubernetes-walkthrough-portal
#   - https://docs.microsoft.com/en-us/azure/container-registry/container-registry-get-started-portal
#   - https://github.com/Azure/aks-create-action
#
# To configure this workflow:
#
# 1. Set the following secrets in your repository (instructions for getting these can be found at https://docs.microsoft.com/en-us/azure/developer/github/connect-from-azure?tabs=azure-cli%2Clinux):
#    - AZURE_CLIENT_ID
#    - AZURE_TENANT_ID
#    - AZURE_SUBSCRIPTION_ID
#
# #
# For more information on GitHub Actions for Azure, refer to https://github.com/Azure/Actions
# For more samples to get started with GitHub Action workflows to deploy to Azure, refer to https://github.com/Azure/actions-workflow-samples
# For more options with the actions used below please refer to https://github.com/Azure/login

name: Build and deploy an app to AKS

on:
  push:
    branches:
      - "master"
  workflow_dispatch:

jobs:
  buildImage:
    runs-on: ubuntu-latest
    steps:
    
    # Logs in with your Azure credentials
    - name: Azure login
      run: |
        az login --service-principal -u a4ea290c-74c6-4d87-a2d2-460649d0fea4 -p IPp8Q~xRTUA74_Ta4futcs0y_AX2uU7.-WVf3bzr --tenant b41b72d0-4e9f-4c26-8a69-f949f367c91d
        az account show
