name: MATRIX TEST BUILD 
on: 
 push:
    branches: master
    paths:
      - 'src/*/*Service.Client/*'
jobs:
 init:
  runs-on: ubuntu-latest
  outputs:
    the_matrix: ${{ steps.set-matrix.outputs.matrix }}
  steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # needed for tj-actions/changed-files
    - name: Get changed files
      #id: changed-files
      id: changed-files-dir-names
      uses: tj-actions/changed-files@v31
      with:
#         json: true
        dir_names: true
#         files: |
#             src/*/*Service.Client/*
    - name: List all changed files
      run: |
        echo '${{ steps.changed-files-dir-names.outputs.all_changed_files }}'
    - id: set-matrix
      run: echo "::set-output name=matrix::{\"container\":${{ steps.changed-files-dir-names.outputs.all_changed_files }}}"
          

 build_files:
   runs-on: ubuntu-latest
   needs: [init]
   strategy:
      matrix: ${{ fromJson(needs.init.outputs.the_matrix) }}
   steps:
    - name: build files
      run: | 
        echo "Run step against: ${{ matrix.container }}"



# name: build
# on: push
# jobs:
#   job1:
#     runs-on: ubuntu-latest
#     outputs:
#       matrix: ${{ steps.set-matrix.outputs.matrix }}
#     steps:
#       - id: set-matrix
#         run: echo "::set-output name=matrix::{\"include\":[{\"project\":\"foo\",\"config\":\"Debug\"},{\"project\":\"bar\",\"config\":\"Release\"}]}"
#   job2:
#     needs: job1
#     runs-on: ubuntu-latest
#     strategy:
#       matrix: ${{ fromJSON(needs.job1.outputs.matrix) }}
#     steps:
#       - run: build
# name: Build and publish nuget artifact

# on:
#   push:
#     branches: master
#     paths:
#       - 'src/*/*Service.Client/*'

# jobs:

#   job1:
#     runs-on: ubuntu-latest
#     outputs:
#       output: ${{ steps.changed-files.outputs.all_changed_files }}
#     steps:
#     - uses: actions/checkout@v3
#       with:
#         fetch-depth: 0
          
#     - name: Get changed files in the docs folder
#       id: changed-files
#       uses: tj-actions/changed-files@v31
#       with:
#         files: |
#           src/*/*Service.Client
#     - name: List all changed files
#       run: echo ${{ steps.changed-files.outputs.all_changed_files }}
#     - name: Run step when a file has been deleted
#       if: contains(steps.changed-files.outputs.all_changed_files, 'Admin.Name/Admin.Service.Client')
#       run: |
#         echo "Your test.txt file has been deleted."
        
#   job2:
#     needs: job1
#     if: contains(needs.job1.outputs.output, 'Admin.Name/Admin.Service.Client')
#     uses: ./.github/workflows/action.yml
#     with:
#       source: "src/Services.Academic/Academic.Service.Client"
#     secrets:
#       AZURE_ARTIFACTS_FEED_URL: ${{ secrets.PA_TOKEN }}
    
